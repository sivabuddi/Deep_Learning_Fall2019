# -*- coding: utf-8 -*-
"""FFNN.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1byVCuYeXOktEUe3yf3LCb5Jw-DZgFPcJ
"""

import tensorflow as tf 
import datetime,os
from tensorflow.keras import datasets, layers, models
from keras.datasets import mnist

(train_images, train_labels), (test_images, test_labels) = mnist.load_data()

print("Before reshaping",)
print("No.of.axis in training images",train_images.ndim)
print("No.of.axis in testing images",test_images.ndim)
print("Shape of training images",train_images.shape)
print("Shape of testing images",test_images.shape)

train_images = train_images.reshape((60000,28,28,1))
test_images = test_images.reshape((10000,28,28,1))

print("After reshaping",)
print("No.of.axis in training images",train_images.ndim)
print("No.of.axis in testing images",test_images.ndim)
print("Shape of training images",train_images.shape)
print("Shape of testing images",test_images.shape)

# Create convolutional base
#model = models.Sequential()

train_images, test_images = train_images/255.0, test_images/255.0

model_dnn = tf.keras.models.Sequential([tf.keras.layers.Flatten(input_shape=(28,28)),tf.keras.layers.Dense(128,activation='relu')
                                        , tf.keras.layers.Dropout(0.2),tf.keras.layers.Dense(10,activation='softmax')])

model_dnn.compile(optimizer='adam',loss = 'sparse_categorical_crossentropy',metrics=['accuracy'] )

model_dnn.summary()

model_dnn.fit(train_images,train_labels,epochs=5)